" vimrc basic setting ---- {{{
filetype plugin indent on
set et
set ts=2
set sw=2
set sts=-1
set backspace=eol,start,indent
set ruler
set nocompatible
set showcmd
syntax on
augroup py_iden
    autocmd!
    autocmd BufEnter *.py set ts=4 sw=4
augroup END

set fileencodings=utf-8,gbk,latin1
set modelines=5
set ssop-=blank
set ssop-=folds
set ssop-=localoptions
set ssop-=options
set foldlevel=99
set foldenable
set foldcolumn=1
set foldlevelstart=99
" }}}

" vimrc basic map ---- {{{
noremap <Up> gk
noremap <Down> gj
inoremap <F2> <Esc>:w<CR>a

set keymap=dvorak
" }}}

let mapleader = " "
let maplocalleader = "\\"

" Funky practice ---- {{{
nnoremap <leader>w :match Error /\ \+$/<cr>
nnoremap <leader>W :match none<cr>
" }}}


" vimrc high-lv map ---- {{{
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

nnoremap <leader>kj :set keymap=dvorak<cr>
nnoremap <leader>kk :set keymap=<cr>
nnoremap <leader>ya :%y<cr>

nnoremap <leader>c5 :let @+=@%<cr>

nnoremap <leader>nd :execute ':packadd nerdtree \| NERDTreeToggle'<cr>

nnoremap <leader>kd :set keymap=dvorak<cr>
nnoremap <leader>kk :set keymap&<cr>

nnoremap <leader>po :echo "this_obsession: " . g:this_obsession<cr>
" }}}

" User info i-abbrev ---- {{{
iabbrev @mail@ lintd23@outlook.com
iabbrev @gmail@ lifeich0@gmail.com
iabbrev <expr> @now@ strftime("%F %T %z")
" }}}

" CF i-abbrev ---- {{{
iabbrev !tt! int tt; cin >> tt; while (tt--)

iabbrev !fori! for (int i = 0; i < n; ++i)
iabbrev !forij! for (int i = 0; i < n; ++i) for (int j = 0; j < m; ++j)
iabbrev !forj! for (int j = 0; j < m; ++j)
iabbrev !fork! for (int k = 0; k < n; ++k)

iabbrev !l! [&](
iabbrev !vi! std::vector<int>
iabbrev !vi64! std::vector<int64_t>
iabbrev !vsz! std::vector<std::size_t>
iabbrev !bi! std::back_inserter()
iabbrev !b! .begin()
iabbrev !e! .end()
iabbrev !pb! .emplace_back

iabbrev !iit! istream_iterator(cin)
iabbrev !oit! ostream_iterator(cout)

iabbrev !py! from random import randint as r
iabbrev !pr! for _ in range()
iabbrev !sh! #!/usr/bin/env bash
iabbrev !chk! i=1; while :; do python ./gen.py > c.in && ./force <c.in >c.ans && ./main.cc.exe <c.in >c.out && printf "%s ok\r" $i \|\| break; i=$((i+1)); done

" }}}

function! s:MinpacPrepare() abort
  packadd minpac
  call minpac#init()
  " manage by nix
  "call minpac#add('k-takata/minpac', {'type': 'opt'})

  " minpac managing plugins (cannot manager by nix) {{{
  " }}}
endfunction

command! PkgUpd call s:MinpacPrepare() | call minpac#update()
command! PkgCl call s:MinpacPrepare() | call minpac#clean()
command! PkgSt call s:MinpacPrepare() | call minpac#status()

" fzf fold settings {{{
let g:fzf_buffers_jump = 1
let $FZF_DEFAULT_COMMAND = "fd --type f --strip-cwd-prefix"
" }}}
" fzf, rg shortcuts {{{
nnoremap <leader>o :Files<CR>
nnoremap <leader>zt :BTags<CR>
nnoremap <leader>zT :Tags<CR>
nnoremap <leader>zb :Buffers<CR>
nnoremap <leader>zw :Windows<CR>
nnoremap <leader>zd :GFiles?<CR>
nnoremap <leader>gg :execute ":packadd vim-grepper \| Grepper"<CR>
" }}}

" tab op shortcuts {{{
nnoremap <M-h> <C-w><C-h>
nnoremap <M-j> <C-w><C-j>
nnoremap <M-k> <C-w><C-k>
nnoremap <M-l> <C-w><C-l>
inoremap <M-h> <Esc><C-w><C-h>
inoremap <M-j> <Esc><C-w><C-j>
inoremap <M-k> <Esc><C-w><C-k>
inoremap <M-l> <Esc><C-w><C-l>
nnoremap <M--> gT
nnoremap <M-=> gt
inoremap <M--> <Esc>gT
inoremap <M-=> <Esc>gt
nnoremap <M-9> :-tabmove<CR>
nnoremap <M-0> :+tabmove<CR>
inoremap <M-9> <Esc>:-tabmove<CR>
inoremap <M-0> <Esc>:+tabmove<CR>

command Tclr2m execute tabpagenr()+1 . ",$tabdo tabcl"
" }}}



" colo settings {{{
if has('nvim')
  "colo catppuccin
else
  let g:gruvbox_contrast_dark='soft'
  colo gruvbox
  if ! $SSH_CLIENT
    highlight Normal ctermfg=none ctermbg=none
  endif
endif
highlight CoverageCovered ctermfg=green
highlight CoverageUncovered ctermfg=darkred
highlight CoveragePartial ctermfg=lightblue
" }}}

" vim: foldmethod=marker
